"""Align models with spec and add commission, notification tables

Revision ID: 10e42f6ae8cc
Revises: 1855c37dd305
Create Date: 2025-07-31 17:04:11.574908

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '10e42f6ae8cc'
down_revision = '1855c37dd305'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('commissions',
    sa.Column('id', sa.Integer(), nullable=False, comment='提成记录ID(主键)'),
    sa.Column('order_id', sa.Integer(), nullable=False, comment='关联的订单ID'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='提成归属的用户ID'),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='提成金额'),
    sa.Column('role_at_time', sa.String(length=50), nullable=False, comment='计算时该用户在订单中的角色(客服/技术)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='提成计算时间'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False, comment='通知ID(主键)'),
    sa.Column('recipient_id', sa.Integer(), nullable=False, comment='接收通知的用户ID'),
    sa.Column('content', sa.String(length=255), nullable=False, comment='通知内容'),
    sa.Column('is_read', sa.Boolean(), nullable=False, comment='是否已读'),
    sa.Column('related_order_id', sa.Integer(), nullable=True, comment='(可选)关联的订单ID,用于跳转'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='通知创建时间'),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['related_order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('order_uid', sa.String(length=50), nullable=False, comment='业务ID, PREFIX-YYYYMMDD-XXXX'))
        batch_op.add_column(sa.Column('commission_rate_override', mysql.JSON(), nullable=True, comment='特殊提成比例, 如 {"cs_rate": 12.5, "tech_rate": 15.0}'))
        batch_op.add_column(sa.Column('is_locked', sa.Boolean(), nullable=False, comment='订单是否锁定(已结算/已取消)'))
        batch_op.alter_column('customer_info',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               type_=mysql.JSON(),
               comment='客户信息, 如{"name": "张三", "phone": ...}',
               existing_nullable=False)
        batch_op.alter_column('requirements_desc',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment='需求描述',
               existing_nullable=False)
        batch_op.alter_column('final_price',
               existing_type=mysql.FLOAT(),
               type_=sa.Numeric(precision=10, scale=2),
               comment='订单价格',
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['order_uid'])
        batch_op.drop_column('initial_budget')
        batch_op.drop_column('special_commission_rate')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('skills', mysql.JSON(), nullable=True, comment='擅长领域(为技术角色)'))
        batch_op.alter_column('default_commission_rate',
               existing_type=mysql.FLOAT(),
               type_=sa.Numeric(precision=5, scale=2),
               comment='默认提成比例,如10.00(%)',
               existing_nullable=True)
        batch_op.alter_column('financial_account',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment='财务账号(银行卡/支付宝)',
               existing_nullable=True)
        batch_op.drop_column('specialized_field')

    with op.batch_alter_table('work_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False, comment='填写日志的技术人员ID'))
        batch_op.drop_constraint(batch_op.f('work_logs_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('log_date')
        batch_op.drop_column('developer_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('work_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('developer_id', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('log_date', sa.DATE(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('work_logs_ibfk_1'), 'users', ['developer_id'], ['id'])
        batch_op.drop_column('user_id')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('specialized_field', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True))
        batch_op.alter_column('financial_account',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255),
               comment=None,
               existing_comment='财务账号(银行卡/支付宝)',
               existing_nullable=True)
        batch_op.alter_column('default_commission_rate',
               existing_type=sa.Numeric(precision=5, scale=2),
               type_=mysql.FLOAT(),
               comment=None,
               existing_comment='默认提成比例,如10.00(%)',
               existing_nullable=True)
        batch_op.drop_column('skills')

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('special_commission_rate', mysql.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('initial_budget', mysql.FLOAT(), nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('final_price',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=mysql.FLOAT(),
               comment=None,
               existing_comment='订单价格',
               existing_nullable=True)
        batch_op.alter_column('requirements_desc',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               comment=None,
               existing_comment='需求描述',
               existing_nullable=False)
        batch_op.alter_column('customer_info',
               existing_type=mysql.JSON(),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               comment=None,
               existing_comment='客户信息, 如{"name": "张三", "phone": ...}',
               existing_nullable=False)
        batch_op.drop_column('is_locked')
        batch_op.drop_column('commission_rate_override')
        batch_op.drop_column('order_uid')

    op.drop_table('notifications')
    op.drop_table('commissions')
    # ### end Alembic commands ###
