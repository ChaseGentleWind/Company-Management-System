version: '3.8'

services:
  # MySQL数据库服务
  db:
    image: mysql:8.0
    container_name: company_system_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
      --max_allowed_packet=128M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 10s
      retries: 5
      start_period: 30s
      interval: 30s
    networks:
      - app-network
    restart: unless-stopped

  # 后端Flask服务
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: company_system_backend
    environment:
      - FLASK_ENV=production
    env_file:
      - .env.production
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - backend_uploads:/app/uploads  # 文件上传目录持久化
      - backend_logs:/app/logs        # 应用日志目录
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # 前端Nginx服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: company_system_frontend
    ports:
      - "80:80"
      - "443:443"  # 为HTTPS做准备
    depends_on:
      - backend
    volumes:
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书目录（如果需要HTTPS）
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local